# Generated by Django 4.2 on 2025-09-23 21:37

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("journeys", "0002_alter_journeystepmedia_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("cta_copy", models.CharField(blank=True, max_length=255)),
                ("cover_image_url", models.URLField(blank=True)),
                ("banner_image_url", models.URLField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                        ],
                        default="upcoming",
                        max_length=32,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("general", "General"),
                            ("sustainability", "Sustainability"),
                            ("community", "Community"),
                            ("technology", "Technology"),
                            ("creators", "Creators"),
                        ],
                        max_length=64,
                    ),
                ),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-start_at", "title"],
            },
        ),
        migrations.CreateModel(
            name="ChallengeParticipation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_trade_delta",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("trades_completed", models.PositiveIntegerField(default=0)),
                ("last_progress_at", models.DateTimeField(blank=True, null=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participations",
                        to="challenges.challenge",
                    ),
                ),
                (
                    "journey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="challenge_participations",
                        to="journeys.journey",
                    ),
                ),
                (
                    "last_step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="challenge_participations_last",
                        to="journeys.journeystep",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenge_participations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["challenge", "-total_trade_delta", "joined_at"],
            },
        ),
        migrations.CreateModel(
            name="ChallengeProgress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "trade_delta_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "journey_step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="challenge_progress_entries",
                        to="journeys.journeystep",
                    ),
                ),
                (
                    "participation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress_entries",
                        to="challenges.challengeparticipation",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChallengePrize",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("rank_start", models.PositiveIntegerField()),
                ("rank_end", models.PositiveIntegerField(blank=True, null=True)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prizes",
                        to="challenges.challenge",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "rank_start"],
            },
        ),
        migrations.CreateModel(
            name="ChallengeMilestone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("label", models.CharField(max_length=255)),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="challenges.challenge",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "target_value"],
            },
        ),
        migrations.AddIndex(
            model_name="challenge",
            index=models.Index(fields=["status"], name="challenges__status_076365_idx"),
        ),
        migrations.AddIndex(
            model_name="challenge",
            index=models.Index(
                fields=["category"], name="challenges__categor_5b53b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="challenge",
            index=models.Index(
                fields=["start_at"], name="challenges__start_a_4690b2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="challengeprize",
            unique_together={("challenge", "name")},
        ),
        migrations.AddConstraint(
            model_name="challengeparticipation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("journey__isnull", False)),
                fields=("journey",),
                name="unique_challenge_participation_journey",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="challengeparticipation",
            unique_together={("challenge", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="challengemilestone",
            unique_together={("challenge", "label")},
        ),
    ]
