# Generated by Django 4.2 on 2023-07-16 12:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import garage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Garage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "garage_id",
                    models.CharField(
                        blank=True, max_length=120, null=True, unique=True
                    ),
                ),
                ("open", models.BooleanField(default=True)),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "distance",
                    models.CharField(
                        blank=True, default=0.0, max_length=200, null=True
                    ),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=15,
                        default=0.0,
                        max_digits=30,
                        null=True,
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=15,
                        default=0.0,
                        max_digits=30,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_garage",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_id",
                    models.CharField(
                        blank=True, max_length=120, null=True, unique=True
                    ),
                ),
                ("item_name", models.CharField(blank=True, max_length=255, null=True)),
                ("item_type", models.CharField(blank=True, max_length=255, null=True)),
                ("quality", models.CharField(blank=True, max_length=255, null=True)),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "primary_material",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Plastic", "Plastic"),
                            ("Metal", "Metal"),
                            ("Ceramic", "Ceramic"),
                            ("Wood", "Wood"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("is_listed", models.BooleanField(default=False)),
                ("hidden", models.BooleanField(default=False)),
                ("is_item", models.BooleanField(default=True)),
                (
                    "cost_in_credits",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "distance",
                    models.CharField(
                        blank=True, default=0.0, max_length=200, null=True
                    ),
                ),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=15,
                        default=0.0,
                        max_digits=30,
                        null=True,
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=15,
                        default=0.0,
                        max_digits=30,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Created", "Created"),
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Declined", "Declined"),
                            ("Started", "Started"),
                            ("Ongoing", "Ongoing"),
                            ("Review", "Review"),
                            ("Completed", "Completed"),
                            ("Canceled", "Canceled"),
                        ],
                        default="Pending",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_items",
                        to="garage.garage",
                    ),
                ),
                (
                    "reactions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="item_reactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_id",
                    models.CharField(
                        blank=True, max_length=120, null=True, unique=True
                    ),
                ),
                (
                    "service_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "service_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("avg_time", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "distance",
                    models.CharField(
                        blank=True, default=0.0, max_length=200, null=True
                    ),
                ),
                ("is_premium", models.BooleanField(default=False)),
                ("is_listed", models.BooleanField(default=False)),
                ("hidden", models.BooleanField(default=False)),
                ("is_service", models.BooleanField(default=True)),
                ("available", models.BooleanField(default=False)),
                (
                    "cost_in_credits",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=15,
                        default=0.0,
                        max_digits=30,
                        null=True,
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=15,
                        default=0.0,
                        max_digits=30,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_service",
                        to="garage.garage",
                    ),
                ),
                (
                    "reactions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="service_reactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserDesire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desire", models.CharField(blank=True, max_length=200, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_desires",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageServiceVideos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=garage.models.upload_service_video_path,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=1000, null=True)),
                ("file_ext", models.CharField(blank=True, max_length=255, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_service_videos",
                        to="garage.garageservice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageServiceImages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=garage.models.upload_service_image_path,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=1000, null=True)),
                ("file_ext", models.CharField(blank=True, max_length=255, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_service_images",
                        to="garage.garageservice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageServiceComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_service_comments",
                        to="garage.garageservice",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageItemVideos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=garage.models.upload_service_video_path,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=1000, null=True)),
                ("file_ext", models.CharField(blank=True, max_length=255, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_item_videos",
                        to="garage.garageitem",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageItemImages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=garage.models.upload_item_image_path,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=1000, null=True)),
                ("file_ext", models.CharField(blank=True, max_length=255, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_item_images",
                        to="garage.garageitem",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GarageItemComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "garage_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garage_item_comments",
                        to="garage.garageitem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CanCounterWith",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_name", models.CharField(blank=True, max_length=200, null=True)),
                ("info", models.TextField(blank=True, null=True)),
                ("mandatory", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="can_counter_item",
                        to="garage.garageitem",
                    ),
                ),
            ],
        ),
    ]
